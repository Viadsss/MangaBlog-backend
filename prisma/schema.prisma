// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  OWNER
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  profileUrl String?
  password  String
  role      Role   @default(USER) 
  createdAt DateTime @default(now())
  
  posts     Post[]
  comments  Comment[]
  likes     Like[]
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  bannerUrl String?
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  author    User     @relation(fields: [authorId], references: [id])
  comments  Comment[]
  likes     Like[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  postId    Int
  userId    Int
  createdAt DateTime @default(now())
  
  post      Post @relation(fields: [postId], references: [id])
  user      User @relation(fields: [userId], references: [id])
}

model Like {
  id        Int      @id @default(autoincrement())
  postId    Int
  userId    Int
  createdAt DateTime @default(now())
  
  post      Post @relation(fields: [postId], references: [id])
  user      User @relation(fields: [userId], references: [id])
  
  @@unique([postId, userId])  // To make sure a user can only like a post once
}
